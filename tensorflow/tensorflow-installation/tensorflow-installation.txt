See: https://www.tensorflow.org/install/install_linux

*********************************************************************
Use these instructions to install tensorflow in a virtual environment.
These instructions need to be applied only once.

Create the virtual environment called tensorflow (once):
virtualenv --system-site-packages -p python3 ../venv
...or where ever you want to install it; I'm going to install virtualenv under tensorflow directory - it will be used for all tensorflow projects.

Activate virtual environment:
source ../venv/bin/activate
(you should now see (venv) in command prompt)

Ensure pip â‰¥8.1 is installed (once):
easy_install -U pip

Install tensorflow (once):
pip3 install --upgrade tensorflow

Test installation ('=>...' not including to the command):
python3
import tensorflow as tf
hello = tf.constant('Hello, TensorFlow!')
sess = tf.Session()
print(sess.run(hello))
=> Should print: b'Hello, TensorFlow!'

.. or use the script I provided:
python3 src/validate-tensorflow-installation.py

If you saw warning like "I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA" => 
import os
os.environ['TF_CPP_MIN_LOG_LEVEL']='2'
import tensorflow as tf
I.e. the default is 0 (all logs), 2 filters out warnings.
Another solution is to build tensorflow from sources.

Deactivate virtual environment once you are done:
deactivate

*********************************************************************
Start using tensorflow in a virtual environment.

Activate virtual environment:
source ../venv/bin/activate
(you should now see (tensorflow) in command prompt)

Deactivate virtual environment once you are done:
deactivate

*********************************************************************

Continue configuring PyCharm if you use that Python IDE: pycharm-instructions.txt.
